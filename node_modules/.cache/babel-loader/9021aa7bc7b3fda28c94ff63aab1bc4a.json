{"remainingRequest":"/home/rezazr/Workspaces/pokemon-vue/node_modules/babel-loader/lib/index.js!/home/rezazr/Workspaces/pokemon-vue/node_modules/eslint-loader/index.js??ref--13-0!/home/rezazr/Workspaces/pokemon-vue/src/_store/modules/pokemon.js","dependencies":[{"path":"/home/rezazr/Workspaces/pokemon-vue/src/_store/modules/pokemon.js","mtime":1575994453974},{"path":"/home/rezazr/Workspaces/pokemon-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rezazr/Workspaces/pokemon-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rezazr/Workspaces/pokemon-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgeyBwb2tlbW9uU2VydmljZSB9IGZyb20gIkAvX3NlcnZpY2VzIjsKZXhwb3J0IHZhciBwb2tlbW9uID0gewogIHN0YXRlOiB7CiAgICBwb2tlbW9uOiBudWxsLAogICAgcG9rZW1vbnM6IG51bGwsCiAgICBpc1Bva2Vtb25zRmlsbGVkOiBmYWxzZSwKICAgIGlzTG9hZGluZzogZmFsc2UKICB9LAogIGdldHRlcnM6IHt9LAogIGFjdGlvbnM6IHsKICAgIGdldFBva2Vtb246IGZ1bmN0aW9uIGdldFBva2Vtb24oX3JlZiwgZGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQsCiAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgIHBva2Vtb25TZXJ2aWNlLmdldFBva2Vtb24oZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2VQb2tlbW9uKSB7CiAgICAgICAgcG9rZW1vblNlcnZpY2UuZ2V0UG9rZW1vblNwZWNpZXMoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2VQb2tlbW9uU3BlY2llcykgewogICAgICAgICAgY29uc29sZS5sb2coIngiLCByZXNwb25zZVBva2Vtb25TcGVjaWVzKTsKICAgICAgICAgIHZhciByZXN1bHQgPSB7CiAgICAgICAgICAgIGFiaWxpdGllczogW10sCiAgICAgICAgICAgIGNhcHR1cmVSYXRlOiByZXNwb25zZVBva2Vtb25TcGVjaWVzLmNhcHR1cmVfcmF0ZSwKICAgICAgICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICAgICAgICBoZWlnaHQ6IHJlc3BvbnNlUG9rZW1vbi5oZWlnaHQgKiAxMCwKICAgICAgICAgICAgbW92ZXM6IFtdLAogICAgICAgICAgICBwaWN0dXJlOiByZXNwb25zZVBva2Vtb24uc3ByaXRlcy5mcm9udF9kZWZhdWx0LAogICAgICAgICAgICBzdGF0czoge30sCiAgICAgICAgICAgIHR5cGVzOiBbXSwKICAgICAgICAgICAgd2VpZ2h0OiBNYXRoLnJvdW5kKHJlc3BvbnNlUG9rZW1vbi53ZWlnaHQgLyAxMCkKICAgICAgICAgIH07CiAgICAgICAgICByZXNwb25zZVBva2Vtb24uYWJpbGl0aWVzLm1hcChmdW5jdGlvbiAoYWJpbGl0eSkgewogICAgICAgICAgICByZXN1bHQuYWJpbGl0aWVzLnB1c2goYWJpbGl0eS5hYmlsaXR5Lm5hbWUpOwogICAgICAgICAgfSk7CiAgICAgICAgICByZXNwb25zZVBva2Vtb25TcGVjaWVzLmZsYXZvcl90ZXh0X2VudHJpZXMuc29tZShmdW5jdGlvbiAoZGVzY3JpcHRpb24pIHsKICAgICAgICAgICAgaWYgKGRlc2NyaXB0aW9uLmxhbmd1YWdlLm5hbWUgPT09ICJlbiIpIHJlc3VsdC5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uLmZsYXZvcl90ZXh0OwogICAgICAgICAgfSk7CiAgICAgICAgICByZXNwb25zZVBva2Vtb24ubW92ZXMubWFwKGZ1bmN0aW9uIChtb3ZlKSB7CiAgICAgICAgICAgIHJlc3VsdC5tb3Zlcy5wdXNoKG1vdmUubW92ZS5uYW1lKTsKICAgICAgICAgIH0pOwogICAgICAgICAgcmVzcG9uc2VQb2tlbW9uLnN0YXRzLm1hcChmdW5jdGlvbiAoc3RhdCkgewogICAgICAgICAgICBzd2l0Y2ggKHN0YXQuc3RhdC5uYW1lKSB7CiAgICAgICAgICAgICAgY2FzZSAic3BlZWQiOgogICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRzLnNwZWVkID0gc3RhdC5iYXNlX3N0YXQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAic3BlY2lhbC1kZWZlbnNlIjoKICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0cy5zcGVjaWFsRGVmZW5zZSA9IHN0YXQuYmFzZV9zdGF0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgInNwZWNpYWwtYXR0YWNrIjoKICAgICAgICAgICAgICAgIHJlc3VsdC5zdGF0cy5zcGVjaWFsQXR0YWNrID0gc3RhdC5iYXNlX3N0YXQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAiZGVmZW5zZSI6CiAgICAgICAgICAgICAgICByZXN1bHQuc3RhdHMuZGVmZW5zZSA9IHN0YXQuYmFzZV9zdGF0OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgImF0dGFjayI6CiAgICAgICAgICAgICAgICByZXN1bHQuc3RhdHMuYXR0YWNrID0gc3RhdC5iYXNlX3N0YXQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAiaHAiOgogICAgICAgICAgICAgICAgcmVzdWx0LnN0YXRzLmhwID0gc3RhdC5iYXNlX3N0YXQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIHJlc3BvbnNlUG9rZW1vbi50eXBlcy5tYXAoZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICAgICAgcmVzdWx0LnR5cGVzLnB1c2godHlwZS50eXBlLm5hbWUpOwogICAgICAgICAgfSk7CiAgICAgICAgICBjb21taXQoInNldFBva2Vtb24iLCByZXN1bHQpOwogICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICB9KTsKICAgICAgfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgZGlzcGF0Y2goImFsZXJ0L2Vycm9yIiwgZXJyb3IsIHsKICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gZXJyb3I7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFBva2Vtb25zOiBmdW5jdGlvbiBnZXRQb2tlbW9ucyhfcmVmMiwgZGF0YSkgewogICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBnZXRQb2tlbW9ucyQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBkaXNwYXRjaCA9IF9yZWYyLmRpc3BhdGNoOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAocG9rZW1vblNlcnZpY2UuZ2V0UG9rZW1vbnMoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0UG9rZW1vbnMiLCByZXNwb25zZSk7CiAgICAgICAgICAgICAgICBjb21taXQoInNldElzUG9rZW1vbnNGaWxsZWQiKTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJhbGVydC9lcnJvciIsIGVycm9yLCB7CiAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yOwogICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldFBva2Vtb246IGZ1bmN0aW9uIHNldFBva2Vtb24oc3RhdGUsIHJlc3BvbnNlKSB7CiAgICAgIHN0YXRlLnBva2Vtb24gPSByZXNwb25zZTsKICAgIH0sCiAgICBzZXRQb2tlbW9uczogZnVuY3Rpb24gc2V0UG9rZW1vbnMoc3RhdGUsIHJlc3BvbnNlKSB7CiAgICAgIGlmIChzdGF0ZS5pc1Bva2Vtb25zRmlsbGVkKSB7CiAgICAgICAgc3RhdGUucG9rZW1vbnMgPSBbXTsKICAgICAgICBzdGF0ZS5pc1Bva2Vtb25zRmlsbGVkID0gZmFsc2U7CiAgICAgIH0KCiAgICAgIHN0YXRlLnBva2Vtb25zID0gcmVzcG9uc2U7CiAgICB9LAogICAgc2V0SXNQb2tlbW9uc0ZpbGxlZDogZnVuY3Rpb24gc2V0SXNQb2tlbW9uc0ZpbGxlZChzdGF0ZSkgewogICAgICBzdGF0ZS5pc1Bva2Vtb25zRmlsbGVkID0gIXN0YXRlLmlzUG9rZW1vbnNGaWxsZWQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/rezazr/Workspaces/pokemon-vue/src/_store/modules/pokemon.js"],"names":["pokemonService","pokemon","state","pokemons","isPokemonsFilled","isLoading","getters","actions","getPokemon","data","commit","dispatch","then","responsePokemon","getPokemonSpecies","responsePokemonSpecies","console","log","result","abilities","captureRate","capture_rate","description","height","moves","picture","sprites","front_default","stats","types","weight","Math","round","map","ability","push","name","flavor_text_entries","some","language","flavor_text","move","stat","speed","base_stat","specialDefense","specialAttack","defense","attack","hp","type","error","root","getPokemons","response","mutations","setPokemon","setPokemons","setIsPokemonsFilled"],"mappings":"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","sourcesContent":["import { pokemonService } from \"@/_services\";\n\nexport const pokemon = {\n  state: {\n    pokemon: null,\n\n    pokemons: null,\n    isPokemonsFilled: false,\n\n    isLoading: false\n  },\n  getters: {},\n  actions: {\n    getPokemon({ commit, dispatch }, data) {\n      pokemonService.getPokemon(data).then(\n        responsePokemon => {\n          pokemonService\n            .getPokemonSpecies(data)\n            .then(responsePokemonSpecies => {\n              console.log(\"x\", responsePokemonSpecies);\n              let result = {\n                abilities: [],\n                captureRate: responsePokemonSpecies.capture_rate,\n                description: \"\",\n                height: responsePokemon.height * 10,\n                moves: [],\n                picture: responsePokemon.sprites.front_default,\n                stats: {},\n                types: [],\n                weight: Math.round(responsePokemon.weight / 10)\n              };\n\n              responsePokemon.abilities.map(ability => {\n                result.abilities.push(ability.ability.name);\n              });\n\n              responsePokemonSpecies.flavor_text_entries.some(description => {\n                if (description.language.name === \"en\")\n                  result.description = description.flavor_text;\n              });\n\n              responsePokemon.moves.map(move => {\n                result.moves.push(move.move.name);\n              });\n\n              responsePokemon.stats.map(stat => {\n                switch (stat.stat.name) {\n                  case \"speed\":\n                    result.stats.speed = stat.base_stat;\n                    break;\n                  case \"special-defense\":\n                    result.stats.specialDefense = stat.base_stat;\n                    break;\n                  case \"special-attack\":\n                    result.stats.specialAttack = stat.base_stat;\n                    break;\n                  case \"defense\":\n                    result.stats.defense = stat.base_stat;\n                    break;\n                  case \"attack\":\n                    result.stats.attack = stat.base_stat;\n                    break;\n                  case \"hp\":\n                    result.stats.hp = stat.base_stat;\n                    break;\n                  default:\n                    break;\n                }\n              });\n\n              responsePokemon.types.map(type => {\n                result.types.push(type.type.name);\n              });\n\n              commit(\"setPokemon\", result);\n\n              return result;\n            });\n        },\n        error => {\n          dispatch(\"alert/error\", error, { root: true });\n\n          return error;\n        }\n      );\n    },\n    async getPokemons({ commit, dispatch }, data) {\n      await pokemonService.getPokemons(data).then(\n        response => {\n          commit(\"setPokemons\", response);\n          commit(\"setIsPokemonsFilled\");\n\n          return response;\n        },\n        error => {\n          dispatch(\"alert/error\", error, { root: true });\n\n          return error;\n        }\n      );\n    }\n  },\n  mutations: {\n    setPokemon(state, response) {\n      state.pokemon = response;\n    },\n    setPokemons(state, response) {\n      if (state.isPokemonsFilled) {\n        state.pokemons = [];\n        state.isPokemonsFilled = false;\n      }\n      state.pokemons = response;\n    },\n    setIsPokemonsFilled(state) {\n      state.isPokemonsFilled = !state.isPokemonsFilled;\n    }\n  }\n};\n"]}]}